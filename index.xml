<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Timms.io: Just another infosec blog on TimmsIO</title><link>https://timms.io/</link><description>Recent content in Timms.io: Just another infosec blog on TimmsIO</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Thu, 31 Oct 2019 18:02:57 +1100</lastBuildDate><atom:link href="https://timms.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Dependencies During Development</title><link>https://timms.io/blog/devdeps/</link><pubDate>Thu, 31 Oct 2019 18:02:57 +1100</pubDate><guid>https://timms.io/blog/devdeps/</guid><description>This was originally published in the Kult of the Cyber Witch Zine, issue 01: https://kultofthecyberw.itch.io/
Dependencies During Development: Barely Managing Software relies on dependencies, but managing them is a hard problem. They quickly become numerous and interwoven, stacking up technical debt and hiding serious vulnerabilities under mountains of abstraction. But disaster can be avoided by taking a regimented approach to inclusion, identification, and remediation.
So, why is dependency management so hard?</description></item><item><title>AngstromCTF2019: The Mueller Report</title><link>https://timms.io/ctf/2019/angstrom/the-mueller-report/</link><pubDate>Fri, 26 Apr 2019 16:11:55 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/the-mueller-report/</guid><description>&lt;h1 id=&#34;angstromctf2019-the-mueller-report&#34;&gt;AngstromCTF2019: The Mueller Report&lt;/h1&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The Mueller Report
Misc
20pts&lt;/p&gt;
&lt;p&gt;The redacted version of the Mueller report was finally released this week! There&amp;rsquo;s some pretty funny stuff in there, but maybe the report has more beneath the surface.&lt;/p&gt;
&lt;p&gt;link:&lt;a href=&#34;https://mega.nz/#!SsMDmAhT!MjplSc7lCqUQFrZC5EL_t7f2fdoDDNwrZhfTgTAcG7s&#34;&gt;https://mega.nz/#!SsMDmAhT!MjplSc7lCqUQFrZC5EL_t7f2fdoDDNwrZhfTgTAcG7s&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>AngstromCTF2019: Scratch It Out</title><link>https://timms.io/ctf/2019/angstrom/scratch-it-out/</link><pubDate>Fri, 26 Apr 2019 16:11:28 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/scratch-it-out/</guid><description>&lt;h1 id=&#34;angstromctf2019-scratch-it-out&#34;&gt;AngstromCTF2019: Scratch It Out&lt;/h1&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Scratch It Out
Misc
60&lt;/p&gt;
&lt;p&gt;An oddly yellow cat handed me this message - what could it mean?&lt;/p&gt;
&lt;p&gt;Author: innoviox&lt;/p&gt;
&lt;p&gt;link: &lt;a href=&#34;https://files.actf.co/397a7663cfc657bea92b8038eb2a27804ac75ba56b74e56572e57f00414fd43f/project.json&#34;&gt;https://files.actf.co/397a7663cfc657bea92b8038eb2a27804ac75ba56b74e56572e57f00414fd43f/project.json&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>AngstromCTF2019: Paper Bin</title><link>https://timms.io/ctf/2019/angstrom/paper-bin/</link><pubDate>Fri, 26 Apr 2019 16:10:48 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/paper-bin/</guid><description>&lt;h1 id=&#34;angstromctf2019-paper-bin&#34;&gt;AngstromCTF2019: Paper Bin&lt;/h1&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Paper Bin
Misc
40 pts&lt;/p&gt;
&lt;p&gt;defund accidentally deleted all of his math papers! Help recover them from his computer&amp;rsquo;s raw data.&lt;/p&gt;
&lt;p&gt;Author: defund&lt;/p&gt;
&lt;p&gt;link: &lt;a href=&#34;https://files.actf.co/ac4e8f7e16fb244613ffe42741046f98839e477e7a511d583dcc1bb291486029/paper_bin.dat&#34;&gt;https://files.actf.co/ac4e8f7e16fb244613ffe42741046f98839e477e7a511d583dcc1bb291486029/paper_bin.dat&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>AngstromCTF2019: One Bite</title><link>https://timms.io/ctf/2019/angstrom/one-bite/</link><pubDate>Fri, 26 Apr 2019 16:10:14 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/one-bite/</guid><description>&lt;h1 id=&#34;angstromctf2019-one-bite&#34;&gt;AngstromCTF2019: One Bite&lt;/h1&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;One Bite
Rev
60&lt;/p&gt;
&lt;p&gt;Whenever I have friends over, I love to brag about things that I can eat in a single bite. Can you give this program a tasty flag that fits the bill?&lt;/p&gt;
&lt;p&gt;/problems/2019/one_bite&lt;/p&gt;
&lt;p&gt;Author: SirIan&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A binary file is also provided.&lt;/p&gt;</description></item><item><title>AngstromCTF2019: No Sequels 1 &amp;&amp; 2</title><link>https://timms.io/ctf/2019/angstrom/no-sequels/</link><pubDate>Fri, 26 Apr 2019 16:09:43 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/no-sequels/</guid><description>&lt;h1 id=&#34;angstromctf2019-no-sequels-1-2&#34;&gt;AngstromCTF2019: No Sequels 1 &amp;amp;&amp;amp; 2&lt;/h1&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;p&gt;Two parts, 130pts total.&lt;/p&gt;
&lt;p&gt;Part 1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No Sequels
Web
50&lt;/p&gt;
&lt;p&gt;The prequels sucked, and the sequels aren&amp;rsquo;t much better, but at least we always have the original trilogy.&lt;/p&gt;
&lt;p&gt;Author: SirIan&lt;/p&gt;
&lt;p&gt;link: &lt;a href=&#34;https://nosequels.2019.chall.actf.co/&#34;&gt;https://nosequels.2019.chall.actf.co/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Part 2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No Sequels 2
Web
80&lt;/p&gt;
&lt;p&gt;This is the sequel to No Sequels. You&amp;rsquo;ll see the challenge page once you solve the first one.&lt;/p&gt;
&lt;p&gt;Author: SirIan&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>AngstromCTF2019: Control You</title><link>https://timms.io/ctf/2019/angstrom/control-you/</link><pubDate>Fri, 26 Apr 2019 16:09:08 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/control-you/</guid><description>&lt;h1 id=&#34;angstromctf2019-control-you&#34;&gt;AngstromCTF2019: Control You&lt;/h1&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Control You
Web
20&lt;/p&gt;
&lt;p&gt;Only those who give us the flag are exempt from our control.&lt;/p&gt;
&lt;p&gt;Author: kmh11&lt;/p&gt;
&lt;p&gt;link: &lt;a href=&#34;https://controlyou.2019.chall.actf.co/&#34;&gt;https://controlyou.2019.chall.actf.co/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>AngstromCTF2019: Classy Cipher</title><link>https://timms.io/ctf/2019/angstrom/classy-cipher/</link><pubDate>Fri, 26 Apr 2019 16:07:20 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/classy-cipher/</guid><description>&lt;h1 id=&#34;angstromctf2019-classy-cipher&#34;&gt;AngstromCTF2019: Classy Cipher&lt;/h1&gt;
&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Classy Cipher
Crypto
20
&amp;gt;
Every CTF starts off with a Caesar cipher, but we&amp;rsquo;re more classy.&lt;/p&gt;
&lt;p&gt;Author: defund&lt;/p&gt;
&lt;p&gt;link: &lt;a href=&#34;https://files.actf.co/2e1940179916e0501fbba0de705a668e42646c916276d7a51ad6a2d2cc381720/classy_cipher.py&#34;&gt;https://files.actf.co/2e1940179916e0501fbba0de705a668e42646c916276d7a51ad6a2d2cc381720/classy_cipher.py&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>AngstromCTF2019: Blank Paper</title><link>https://timms.io/ctf/2019/angstrom/blank-paper/</link><pubDate>Fri, 26 Apr 2019 15:47:57 +1000</pubDate><guid>https://timms.io/ctf/2019/angstrom/blank-paper/</guid><description> AngstromCTF2019: Blank Paper The Challenge Blank Paper Misc 30pts
Someone scrubbed defund&amp;rsquo;s paper too hard, and a few of the bytes fell off.
Author: defund
link: https://files.actf.co/26e1d969c6a7c21d973a64a67f74ea2695ee5b8743cd8f20d9ccde665bbfd368/blank_paper.pdf
The Solution The PDF appears unusable to a large number of PDF viewers.
But the PDF viewers built into modern browsers are often a little more tolerant. Opening in FireFox reveals the flag:</description></item><item><title>PlaidCTF2019: Docker</title><link>https://timms.io/ctf/2019/plaid/docker/</link><pubDate>Thu, 25 Apr 2019 10:40:59 +1000</pubDate><guid>https://timms.io/ctf/2019/plaid/docker/</guid><description>PlaidCTF2019 - Docker Misc - 10pts
The Challenge Misc (10 pts) docker pull whowouldeverguessthis/public The Solution When pulling the image, there appear to be three layers:
$ docker pull whowouldeverguessthis/public Using default tag: latest latest: Pulling from whowouldeverguessthis/public 21fb37f5cb03: Pull complete 0ba403b98a95: Pull complete 6e04248e8980: Pull complete Digest: sha256:902f0d5b6f0d773120521ff455037edad0145de2c8de1f44d23be99c757ad4bc Status: Downloaded newer image for whowouldeverguessthis/public:latest A docker image inspect $imagename suggests that the flag may be related to the &amp;ldquo;Cmd&amp;rdquo; attribute.</description></item><item><title>PlaidCTF2019: Can You Guess Me</title><link>https://timms.io/ctf/2019/plaid/can-you-guess-me/</link><pubDate>Thu, 25 Apr 2019 10:38:14 +1000</pubDate><guid>https://timms.io/ctf/2019/plaid/can-you-guess-me/</guid><description>PlaidCTF2019 - Can You Guess Me Misc - 100pts
The Challenge The challenge text leads to the python code running the challenge.
Misc (100 pts) Here&amp;rsquo;s the source to a guessing game: here
You can access the server at
nc canyouguessme.pwni.ng 12349
#! /usr/bin/env python3 from sys import exit from secret import secret_value_for_password, flag, exec print(r&amp;#34;&amp;#34;) print(r&amp;#34;&amp;#34;) print(r&amp;#34; ____ __ __ ____ __ __ &amp;#34;) print(r&amp;#34; / ___|__ _ _ _\ \ / /__ _ _ / ___|_ _ ___ ___ ___| \/ | ___ &amp;#34;) print(r&amp;#34;| | / _` | &amp;#39;_ \ V / _ \| | | | | _| | | |/ _ \/ __/ __| |\/| |/ _ \ &amp;#34;) print(r&amp;#34;| |__| (_| | | | | | (_) | |_| | |_| | |_| | __/\__ \__ \ | | | __/ &amp;#34;) print(r&amp;#34; \____\__,_|_| |_|_|\___/ \__,_|\____|\__,_|\___||___/___/_| |_|\___| &amp;#34;) print(r&amp;#34; &amp;#34;) print(r&amp;#34;&amp;#34;) print(r&amp;#34;&amp;#34;) try: val = 0 inp = input(&amp;#34;Input value: &amp;#34;) count_digits = len(set(inp)) if count_digits &amp;lt;= 10: # Make sure it is a number val = eval(inp) else: raise if val == secret_value_for_password: print(flag) else: print(&amp;#34;Nope.</description></item><item><title>C0de_G0lf</title><link>https://timms.io/blog/codegolf/</link><pubDate>Mon, 15 Apr 2019 11:42:03 +1000</pubDate><guid>https://timms.io/blog/codegolf/</guid><description>Takeaways from PlaidCTF 2019 Very few developers are intentionally coding exploitable bugs into production software. But working code doesn&amp;rsquo;t always mean code that does what the developer intended. A few minor misunderstandings of a language&amp;rsquo;s std lib and internals can be disastrous. As a former developer I&amp;rsquo;m fascinated by the impact of language choice on security.
Exploits exist at the nexus of multiple vulnerabilities. Defensively, we use various techniques to reduce the likelihood of vulnerabilities becoming an exploit.</description></item><item><title>W1R3S Walkthrough</title><link>https://timms.io/writeup/2018-12-02-w1r3s-walkthrough/</link><pubDate>Sun, 02 Dec 2018 10:49:43 +1100</pubDate><guid>https://timms.io/writeup/2018-12-02-w1r3s-walkthrough/</guid><description>Walkthrough and Writeup: W1R3S This is a walkthough for the &amp;ldquo;W1R3S: 1.01&amp;rdquo; vulnerable VM, created by SpecterWires. Needless to say, this page will be full of spoilers for the VM.
The format will be loosely based on the OSCP report format, but modified a little to make it more walkthrough friendly.
The scenario introducing W1R3S is this:
You have been hired to do a penetration test on the W1R3S.</description></item><item><title>First Post!!</title><link>https://timms.io/blog/2018-12-01-first-post/</link><pubDate>Sat, 01 Dec 2018 10:08:50 +1100</pubDate><guid>https://timms.io/blog/2018-12-01-first-post/</guid><description>First Post!! There really isn&amp;rsquo;t much here though.
Maybe check out manyheads, an active aid to subdomain enumeration tools. I wrote the tool during an external attack surface audit in which I enumerated 7000 subdomains.
Using the rough-version of manyheads I confirmed 3 subdomain takeovers, and a host [🙄] of other issues in a relatively short amount of time.
Since then, I&amp;rsquo;ve cleaned it up (a little) and added functionality.</description></item><item><title>CVElinker</title><link>https://timms.io/projects/cvelinker/</link><pubDate>Fri, 30 Nov 2018 19:32:55 +1100</pubDate><guid>https://timms.io/projects/cvelinker/</guid><description>CVELINKER Github: Sh3r4/cvelinker Demo Output: sample report
This is a golang utility to ingest CVE identifiers and generate reports and links. It&amp;rsquo;s purpose is to make sifting through advisories which reference CVEs easier.
It&amp;rsquo;s default behaviour is to provide a few useful links to stdout.
[-] ========================= CVE-2018-3640 ========================== [NVD__] https://nvd.nist.gov/vuln/detail/CVE-2018-3640 [MITRE] https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-3640 [LVD__] https://lwn.net/Search/DoSearch?words=CVE-2018-3640 [MTASP] https://www.rapid7.com/db/search?q=CVE-2018-3640 [DEB__] https://security-tracker.debian.org/tracker/CVE-2018-3640 [RHEL_] https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-3640 [GOOGL] https://www.google.com/search?q=CVE-2018-3640 [GITHB] https://github.com/search?q=%22CVE-2018-3640%22&amp;amp;type=Issues It is also capable of more complete reports using the circl.</description></item><item><title>easyphrase</title><link>https://timms.io/projects/easyphrase/</link><pubDate>Fri, 30 Nov 2018 19:32:55 +1100</pubDate><guid>https://timms.io/projects/easyphrase/</guid><description> easyphrase Demo: Demo NPM: timmsio Github: Sh3r4/easyphrase
easyphrase is a client-side JS utility for generating passphrases using the EFF diceware passphrase method. It can be integrated with any webpage via named divs.
easyphrase can also be installed as a commandline utility!
npm install -g easyphrase
Verbose output looks like this:
$easyphrase ROLLING! Dice Roll Results: 62326; 25341; 46656; 55243; 53312; 62526; Rolls Generated these words: trench, scored, enforced, tile, sneer, refinish Your new password is: tr7enchscoredenforcedtilesneerrefinish</description></item><item><title>EFFwords</title><link>https://timms.io/projects/effwords/</link><pubDate>Fri, 30 Nov 2018 19:32:55 +1100</pubDate><guid>https://timms.io/projects/effwords/</guid><description>EFFwords Github: Sh3r4/EFFWords
EFFwords is a golang passphrase generator based on the EFF diceware passphrase method.
It includes the zxcvbn-go library for calculating the approximate time required to crack a given password. Passwords to evaluate can be provided by the user.
Examples The following example generates 5 passphrases without including special chars, including the optional crack-time calculation in the format password [{seconds}:{human_readable}]
$ EFFWords -zS 5 unicornRetired0sedimentundone [2.851973e+12:centuries] recaptureFactoidangrilye6aseful [3.</description></item><item><title>manyheads</title><link>https://timms.io/projects/manyheads/</link><pubDate>Fri, 30 Nov 2018 19:32:55 +1100</pubDate><guid>https://timms.io/projects/manyheads/</guid><description>manyheads Github: Sh3r4/manyheads Blog: manyheads introduction
manyheads is a multi-threaded utility for making many HEAD requests. It can also do GET (or whatever method you want)!
manyheads was written to collect request data for a list of a few thousand subdomains. It is not built for stealth, but it will collect request data for a list of thousands of webpages in a short time.
manyheads will output in greppable and JSON formats, as well as sending each request result to a new file.</description></item><item><title>samplereport</title><link>https://timms.io/projects/cvelinker/samplereport/</link><pubDate>Fri, 30 Nov 2018 19:32:55 +1100</pubDate><guid>https://timms.io/projects/cvelinker/samplereport/</guid><description>CVE Evaluation Report CVE-2018-3640 CVSS Score: 4.7
Published: 2018-05-22T08:29:00.327000
Modified : 2018-05-22T08:29:00.343000
Summary Systems with microprocessors utilizing speculative execution and that perform speculative reads of system registers may allow unauthorized disclosure of system parameters to an attacker with local user access via a side-channel analysis, aka Rogue System Register Read (RSRE), Variant 3a.
Generated Links NVD&amp;ndash;&amp;gt; https://nvd.nist.gov/vuln/detail/CVE-2018-3640 MITRE&amp;gt; https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-3640 LVD&amp;ndash;&amp;gt; https://lwn.net/Search/DoSearch?words=CVE-2018-3640 MTASP&amp;gt; https://www.rapid7.com/db/search?q=CVE-2018-3640 DEB&amp;ndash;&amp;gt; https://security-tracker.debian.org/tracker/CVE-2018-3640 RHEL-&amp;gt; https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-3640 GOOGL&amp;gt; https://www.</description></item><item><title>easyphrase</title><link>https://timms.io/utils/easyphrase/</link><pubDate>Sun, 29 Oct 2017 19:32:55 +1100</pubDate><guid>https://timms.io/utils/easyphrase/</guid><description> Generate Password Less Verbose Mode Less Secure (no dictionary attack mitigation) Quantity to generate: passwords Copy Last Password to Clipboard</description></item></channel></rss>